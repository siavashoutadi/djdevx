from settings.django.storages import STORAGES
from settings.utils.env import get_env
{% if isGoogle %}
from google.oauth2 import service_account
{% endif %}

env = get_env()
{% if isS3 %}
STORAGES.update(
    {
        "default": {
            "BACKEND": "storages.backends.s3.S3Storage",
            "OPTIONS": {
                "access_key": env("STORAGES_S3_ACCESS_KEY", default=""),
                "secret_key": env("STORAGES_S3_SECRET_KEY", default=""),
                "region_name": env("STORAGES_S3_REGION_NAME", default=""),
                "bucket_name": env("STORAGES_S3_BUCKET_NAME", default=""),
            },
        }
    }
)
{% endif %}
{% if isAzure %}
STORAGES.update(
    {
        "default": {
            "BACKEND": "storages.backends.azure_storage.AzureStorage",
            "OPTIONS": {
                "account_key": env("STORAGES_AZURE_ACCOUNT_KEY", default=""),
                "account_name": env("STORAGES_AZURE_ACCOUNT_NAME", default=""),
                "azure_container": env("STORAGES_AZURE_CONTAINER_NAME", default=""),
            },
        }
    }
)
{% endif %}
{% if isGoogle %}
GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    env("STORAGES_GOOGLE_CREDENTIALS", default="")
)

STORAGES.update(
    {
        "default": {
            "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
            "OPTIONS": {
                "bucket_name": env("STORAGES_GOOGLE_BUCKET_NAME", ""),
                "credentials": GS_CREDENTIALS,
            },
        }
    }
)
{% endif %}
